require(GOstats)
source("http://bioconductor.org/biocLite.R")
biocLite("GOstats")
musca.go<-read.table("./data/mdom_go_list", header=F)
names(musca.go)=c("go_id", "evidence", "gene_id")
head(musca.go)
musca.all<-GOAllFrame(musca.go)
library(AnnotationForge)
library(GOstats)
musca.all<-GOAllFrame(musca.go)
musca.all<-GOAllFrame(GOFrame(musca.go))
library(GSEABase)
musca.go.all<-musca.all
rm(musca.all)
musca.gsc<-GeneSetCollection(musca.go.all, setType=GOCollection())
ls()
source("load_data.R")
head(difexp)
ls()
head(isokey)
head(protkey)
tail(protkey)
head(musca.go)
musca.go<-read.table("./data/mdom_go_list", sep="\t", header=F)
names(musca.go)<-c("go_id", "evidence", "prot_id")
prot.to.gene<-protkey
prot.to.gene$protein<-sub("\\.\\d+$", "", prot.to.gene$protein)
head(prot.to.gene)
tail(prot.to.gene)
musca.go<-merge(musca.go, prot.to.gene, by.x="prot_id", by.y="protein", all.x=T, all.y=F)
head(musca.go)
musca.go<-musca.go[,c("go_id", "evidence", "gene")]
musca.go.all<-GOAllFrame(GOFrame(musca.go))
musca.gsc<-GeneSetCollection(musca.go.all, setType=GOCollection())
universe<-rownames(difexp[!is.na(difexp$padj)])
universe<-rownames(difexp[!is.na(difexp$padj),])
head(universe)
upreg<-rownames(difexp[!is.na(difexp$padj) & difexp$padj<0.1 & difexp$log2FoldChange > 0,])
downreg<-rownames(difexp[!is.na(difexp$padj) & difexp$padj<0.1 & difexp$log2FoldChange < 0,])
?GSEAGOHyperGParams
up.params<-GSEAGOHyperGParams(name="Musca upreg GSEA",
geneSetCollection=musca.gsc,
geneIds = upreg,
universeGeneIds = universe,
ontology = "MF",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
up.params<-GSEAGOHyperGParams(name="Musca upreg GSEA",
geneSetCollection=musca.gsc,
geneIds = upreg,
universeGeneIds = universe,
ontology = "MF",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
down.params<-GSEAGOHyperGParams(name="Musca downreg GSEA",
geneSetCollection=musca.gsc,
geneIds = downreg,
universeGeneIds = universe,
ontology = "MF",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
?hyperGTest
upreg.over.res<-hyperGTest(up.params)
head(summary(upreg.over.res))
head(summary(upreg.over.res), n=15)
up.params<-GSEAGOHyperGParams(name="Musca upreg GSEA",
geneSetCollection=musca.gsc,
geneIds = upreg,
universeGeneIds = universe,
ontology = "BP",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
down.params<-GSEAGOHyperGParams(name="Musca downreg GSEA",
geneSetCollection=musca.gsc,
geneIds = downreg,
universeGeneIds = universe,
ontology = "BP",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
#perform tests
upreg.over.res<-hyperGTest(up.params)
head(summary(upreg.over.res), n=15)
head(difexp)
downreg.over.res<-hyperGTest(down.params)
ls()
head(mdom.all)
head(mdom.imm)
head(mdom.prot)
head(mdom.genes)
head(mdom.all)
mdom.imm.list<-unique(mdom.all[,c("gene", "hmm", "dmel.imm")])
head(mdom.imm.list)
table(mdom.imm.list$hmm)
table(mdom.imm.list$dmel.imm)
mdom.imm.list<-mdom.imm.list[!is.na(mdom.imm.list$hmm) & !is.na(mdom.imm.list$dmel.imm),]
head(mdom.imm.list)
table(mdom.imm.list$dmel.imm, useNA="ifany")
mdom.imm.list<-unique(mdom.all[,c("gene", "hmm", "dmel.imm")])
mdom.imm.list<-mdom.imm.list[!is.na(mdom.imm.list$hmm) | !is.na(mdom.imm.list$dmel.imm),]
table(mdom.imm.list$dmel.imm, useNA="ifany")
table(mdom.imm.list$hmm, useNA="ifany")
?`%in%
`
?`%in%`
universe<-universe[!(universe %in% rownames(mdom.imm.list))]
head(universe)
length(universe)
mdom.imm.list<-unique(mdom.all[,c("gene", "hmm", "dmel.imm")])
mdom.imm.list<-mdom.imm.list[!is.na(mdom.imm.list$hmm) | !is.na(mdom.imm.list$dmel.imm),]
universe<-rownames(difexp[!is.na(difexp$padj),])
length(universe)
head(universe %in% rownames(mdom.imm.list))
head(universe %in% mdom.imm.list$gene)
head(!(universe %in% mdom.imm.list$gene))
sum((universe %in% mdom.imm.list$gene))
sum(!(universe %in% mdom.imm.list$gene))
universe<-universe[!(universe %in% mdom.imm.list$gene)]
upreg<-rownames(difexp[!is.na(difexp$padj) & difexp$padj<0.1 & difexp$log2FoldChange > 0,])
upreg<-upreg[!(upreg %in% mdom.imm.list$gene)]
downreg<-rownames(difexp[!is.na(difexp$padj) & difexp$padj<0.1 & difexp$log2FoldChange < 0,])
downreg<-downreg[!(downreg %in% mdom.imm.list$gene)]
#define parameters for analysis
up.params<-GSEAGOHyperGParams(name="Musca upreg GSEA",
geneSetCollection=musca.gsc,
geneIds = upreg,
universeGeneIds = universe,
ontology = "BP",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
down.params<-GSEAGOHyperGParams(name="Musca downreg GSEA",
geneSetCollection=musca.gsc,
geneIds = downreg,
universeGeneIds = universe,
ontology = "BP",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
#perform tests
upreg.over.res<-hyperGTest(up.params)
downreg.over.res<-hyperGTest(down.params)
head(summary(upreg.over.res))
head(summary(upreg.over.res), n=15)
head(summary(downreg.over.res), n=15)
length(upreg.over.res$GOBPID)
length(upreg.over.res)
str(upreg.over.res)
upreg.over.res
upreg<-rownames(difexp[!is.na(difexp$padj) & difexp$padj<0.05 & difexp$log2FoldChange > 0,])
upreg<-upreg[!(upreg %in% mdom.imm.list$gene)]
downreg<-rownames(difexp[!is.na(difexp$padj) & difexp$padj<0.05 & difexp$log2FoldChange < 0,])
downreg<-downreg[!(downreg %in% mdom.imm.list$gene)]
#define parameters for analysis
up.params<-GSEAGOHyperGParams(name="Musca upreg GSEA",
geneSetCollection=musca.gsc,
geneIds = upreg,
universeGeneIds = universe,
ontology = "BP",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
down.params<-GSEAGOHyperGParams(name="Musca downreg GSEA",
geneSetCollection=musca.gsc,
geneIds = downreg,
universeGeneIds = universe,
ontology = "BP",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
#perform tests
upreg.over.res<-hyperGTest(up.params)
downreg.over.res<-hyperGTest(down.params)
upreg.over.res
head(summary(upreg.over.res))
head(summary(upreg.over.res), n=25)
head(summary(downreg.over.res), n=25)
summary(downreg.over.res)
downreg.over.res
htmlReport(upreg.over.res, file="upreg.html")
library(topGO)
source("http://bioconductor.org/biocLite.R")
biocLite("topGO")
library(topGO)
head(difexp)
library(goseq)
source("http://bioconductor.org/biocLite.R")
biocLite("goseq")
library(edgeR)
library(limma)
source("http://bioconductor.org/biocLite.R")
biocLite("edgeR")
library(edgeR)
ls()
head(des.rsem.input)
counts(des.rsem.input)
md.dge<-DGEList(counts=counts(des.rsem.input, normalized=F))
?calcNormFactors
md.dge<-calcNormFactors(md.dge)
names(counts(des.rsem.input, normalized=F))
head(counts(des.rsem.input, normalized=F))
des.rsem.input
head(des.rsem.input)
str(des.rsem.input)
md.design<-data.frame(unf=c(1,1,1,1,1,1), inf=c(0,0,0,1,1,1))
md.v<-voom(md.dge,md.design,plot=T)
md.fit<-lmFit(md.v,md.design)
md.fit<-eBayes(md.fit)
topTable(md.fit)
plotMA(md.fit)
md.v<-voomWithQualityWeights(md.dge,md.design,plot=T)
md.v<-voomWithQualityWeights(md.dge,md.design,plot=T,normalization="none")
?mroast
md.fit<-lmFit(md.v,md.design)
md.fit<-eBayes(md.fit)
topTable(md.fit)
hist(md.fit$P.value)
md.fit
hist(md.fit$p.value$inf)
hist(md.fit$p.value[,2])
?topTable
topTable(md.fit,2)
head(musca.go)
length(musca.go$go_id)
length(unique(musca.go$go_id))
musca.gsc
?GeneSetCollection
str(musca.gsc)
browseVignettes("limma")
limma.go<-ids2indices(musca.gsc, rownames(md.v))
head(rownames(md.v))
head(md.v)
head(musca.go.all)
musca.go.all
head(musca.go.all$data)
head(musca.go.all@data)
library(plyr)
?dlply
head(musca.go)
musca.golist<-dlply(musca.go[,c("go_id", "gene")], .(go_id), c())
head(musca.golist)
str(musca.golist)
musca.golist[[1]]
musca.golist[[50]]
musca.golist<-dlply(musca.go[,c("go_id", "gene")], .(go_id), c(gene))
?transform
?summarize
musca.golist<-dlply(musca.go[,c("go_id", "gene")], .(go_id), .fun=function(x) c(x$gene))
musca.golist[[1]]
musca.golist<-dlply(musca.go[,c("go_id", "gene")], .(go_id), .fun=function(x) c(as.character(x$gene)))
musca.golist[[1]]
musca.golist<-dlply(musca.go[,c("go_id", "gene")], .(go_id), .fun=function(x) unique(c(as.character(x$gene))))
musca.golist[[1]]
limma.go<-ids2indices(musca.golist, rownames(md.v))
roast.gse<-mroast(y=md.dge, design=md.design, contrast=2)
roast.gse<-mroast(y=md.v, design=md.design, contrast=2)
roast.gse
roast.gse<-mroast(y=md.v, index=limma.go, design=md.design, contrast=2)
roast.gse
?mromer
?romer
romer.gse<-romer(y=md.v, index=limma.go, design-md.design, contrast=2)
romer.gse<-romer(y=md.v, index=limma.go, design=md.design, contrast=2)
romser.gse
romer.gse
romer.gse[order(romer.gse$Up),]
str(romer.gse)
romer.gse[order(romer.gse[,2]),]
romer.gse[order(romer.gse[,4]),]
romer.gse[order(romer.gse[,3]),]
#define the background set as all genes not filtered in the difexp analysis, excluding those with an annotated immune function
mdom.imm.list<-unique(mdom.all[,c("gene", "hmm", "dmel.imm")])
mdom.imm.list<-mdom.imm.list[!is.na(mdom.imm.list$hmm) | !is.na(mdom.imm.list$dmel.imm),]
universe<-rownames(difexp[!is.na(difexp$padj),])
#universe<-universe[!(universe %in% mdom.imm.list$gene)]
#define upreg and downreg gene sets with 10% FDR
upreg<-rownames(difexp[!is.na(difexp$padj) & difexp$padj<0.05 & difexp$log2FoldChange > 0,])
#upreg<-upreg[!(upreg %in% mdom.imm.list$gene)]
downreg<-rownames(difexp[!is.na(difexp$padj) & difexp$padj<0.05 & difexp$log2FoldChange < 0,])
#downreg<-downreg[!(downreg %in% mdom.imm.list$gene)]
#define parameters for analysis
up.params<-GSEAGOHyperGParams(name="Musca upreg GSEA",
geneSetCollection=musca.gsc,
geneIds = upreg,
universeGeneIds = universe,
ontology = "BP",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
down.params<-GSEAGOHyperGParams(name="Musca downreg GSEA",
geneSetCollection=musca.gsc,
geneIds = downreg,
universeGeneIds = universe,
ontology = "BP",
pvalueCutoff = 0.05,
conditional = T,
testDirection = "over")
#perform tests
upreg.over.res<-hyperGTest(up.params)
downreg.over.res<-hyperGTest(down.params)
head(summary(upreg.over.res))
head(summary(upreg.over.res), n=15)
?camera
camera.gse<-camera(y=md.v, index=limma.go, design=md.design, conrast=2)
camera.gse
camera.gse<-camera(y=md.v, index=limma.go, design=md.design, conrast=2, trend.var=T)
camera.gse
sqrt(2)/2
1/(sqrt(2))
mus.strat<-merge(mdom.all, difexp, by.x="gene", by.y="row.names", all=T)
mus.sum<-unique(mus.sum[!is.na(mus.sum$gene),c("gene", "isoform", "ogsid", "class", "strata", "hmm", "sigp", "type.x", "dmel", "dmel.imm", "dmel.sym", "baseMean", "log2FoldChange", "pvalue", "padj")])
mus.sum$difexp=as.numeric(mus.sum$padj<0.05)*as.numeric(sign(mus.sum$log2FoldChange))
mus.sum<-merge(mus.sum, strata.age)
mus.sum$immune<-as.factor(!is.na(mus.sum$dmel.imm) | !is.na(mus.sum$hmm))
mus.sum<-merge(mus.sum, protlen)
#make dataset for analysis
mus.strat<-merge(mdom.all, difexp, by.x="gene", by.y="row.names", all=T)
mus.strat<-unique(mus.strat[!is.na(mus.strat$gene),c("gene", "isoform", "ogsid", "class", "strata", "hmm", "sigp", "type.x", "dmel", "dmel.imm", "dmel.sym", "baseMean", "log2FoldChange", "pvalue", "padj")])
mus.strat$difexp=as.numeric(mus.strat$padj<0.05)*as.numeric(sign(mus.strat$log2FoldChange))
mus.strat<-merge(mus.strat, strata.age)
mus.strat$immune<-as.factor(!is.na(mus.strat$dmel.imm) | !is.na(mus.strat$hmm))
mus.strat<-merge(mus.strat, protlen)
head(mus.strat)
strata.logit<-glm(as.numeric(difexp==1) ~ min.age, family="binomial", data=mus.strat)
summary(strata.logit)
?polr
m <- polr(apply ~ pared + public + gpa, data = dat, Hess=TRUE)
str(as.factor(mus.strat$min.age))
levels(as.factor(mus.strat$min.age))
strata.ordered<-polr(as.numeric(difexp==1) ~ as.factor(min.age), data=mus.strat, Hess=T)
require(MASS)
strata.ordered<-polr(as.numeric(difexp==1) ~ as.factor(min.age), data=mus.strat, Hess=T)
strata.ordered<-glm(as.numeric(difexp==1) ~ rank(min.age), family="binomial", data=mus.strat)
summary(strata.ordered)
head(mus.strat)
mus.strat<-merge(mdom.all, difexp, by.x="gene", by.y="row.names", all=T)
head(mus.strat)
#make dataset for analysis
mus.strat<-merge(mdom.all, difexp, by.x="gene", by.y="row.names", all=T)
mus.strat<-unique(mus.strat[!is.na(mus.strat$gene),c("gene", "isoform", "ogsid", "class", "strata", "hmm", "sigp", "type.x", "dmel", "dmel.imm", "dmel.sym", "baseMean", "log2FoldChange", "pvalue", "padj")])
mus.strat$difexp=as.numeric(mus.strat$padj<0.05)*as.numeric(sign(mus.strat$log2FoldChange))
mus.strat<-merge(mus.strat, strata.age)
mus.strat$immune<-as.factor(!is.na(mus.strat$dmel.imm) | !is.na(mus.strat$hmm))
mus.strat<-merge(mus.strat, protlen)
strata.unordered<-glm(as.numeric(difexp==1) ~ strata, family="binomial", data=mus.strat)
summary(strata.unordered)
?reorder
strata.unordered<-glm(as.numeric(difexp==1) ~ relevel(strata,ref="Opisthokont"), family="binomial", data=mus.strat)
summary(strata.unordered)
summary(strata.ordered)
summary(strata.logit)
head(mus.strat)
boxplot(mus.strat$length~mus.strat$strata)
plot(mus.strat$length ~ mus.strat$min.age)
plot(mus.strat$length, mus.strat$min.age)
plot(log10(mus.strat$length), mus.strat$min.age)
plot(log10(mus.strat$length), log10(mus.strat$min.age))
cor.test(log10(mus.strat$length), log10(mus.strat$min.age))
cor.test(log10(mus.strat$length+1), log10(mus.strat$min.age+1))
cor.test(log10(mus.strat$length+1), log10(mus.strat$min.age+1), method="k")
plot(residuals(lm(log10(mus.strat$min.age)~log10(mus.strat$length))
)
plot(residuals(lm(log10(mus.strat$min.age+1)~log10(mus.strat$length+1))))
plot(residuals(lm(log10(mus.strat$min.age+1)~log10(mus.strat$length+1)))~log10(mus.strat$min.age))
plot(residuals(lm(log10(mus.strat$min.age+1)~log10(mus.strat$length+1)+log10(mus.strat$baseMean+0.1)))~log10(mus.strat$min.age))
plot(residuals(lm(log10(mus.strat$min.age+1)~log10(mus.strat$length+1)))~log10(mus.strat$min.age))
plot(residuals(lm(mus.strat$min.age~log10(mus.strat$length+1)))~log10(mus.strat$min.age))
plot(residuals(lm(mus.strat$min.age~log10(mus.strat$length+1)))~mus.strat$min.age)
plot(residuals(lm(mus.strat$min.age~log10(mus.strat$length+1)+log10(mus.strat$baseMean+1)))~mus.strat$min.age)
plot(residuals(lm(mus.strat$min.age~log10(mus.strat$length+1)))~mus.strat$min.age)
plot(residuals(lm(mus.strat$min.age~mus.strat$length))~mus.strat$min.age)
plot(residuals(lm(mus.strat$min.age~log10(mus.strat$length+1)))~mus.strat$min.age)
summary(lm(mus.strat$min.age~log10(mus.strat$length+1)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+1)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+0.1)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+0.001)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+0.0001)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+0.0000001)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+0.0000000001)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+0.1)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+1)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+1)+log10(mus.strat$length)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+1)*log10(mus.strat$length)))
summary(lm(mus.strat$min.age~0+log10(mus.strat$baseMean+1)*log10(mus.strat$length)))
summary(lm(mus.strat$min.age~0+log10(mus.strat$baseMean+1)+log10(mus.strat$length)))
summary(lm(mus.strat$min.age~log10(mus.strat$baseMean+1)+log10(mus.strat$length)))
plot(mus.strat$length)
hist(mus.strat$length)
hist(log10(mus.strat$length))
hist(log10(mus.strat$baseMean+1))
hist(log10(mus.strat$baseMean))
?scale
mus.strat$scaled.length=scale(log10(mus.strat$length))
hist(mus.strat$scaled.length)
hist(mus.strat$length)
hist(mus.strat$scaled.length)
hist(log10(mus.strat$length))
mus.strat$scaled.length=scale(log10(mus.strat$length),scale=F)
hist(mus.strat$scaled.length)
mus.strat$scaled.exp=scale(log10(mus.strat$baseMean))
hist(mus.strat$scaled.exp)
head(mus.strat)
?scale
min(mus.strat$baseMean)
min(mus.strat$baseMean[mus.strat$baseMean>0])
mus.strat$scaled.exp=mus.strat$baseMean
mus.strat$scaled.exp[mus.strat$baseMean==0]=NA
mus.strat$scaled.exp=scale(log10(mus.strat$scaled.exp))
head(mus.strat)
hist(mus.strat$scaled.exp)
summary(lm(mus.strat$min.age ~ mus.strat$scaled.exp + mus.strat$scaled.len))
summary(lm(mus.strat$min.age ~ mus.strat$scaled.exp*mus.strat$scaled.len))
summary(lm(mus.strat$min.age ~ mus.strat$scaled.exp + mus.strat$scaled.len))
summary(lm(mus.strat$min.age ~ mus.strat$scaled.exp*mus.strat$scaled.len))
summary(lm(mus.strat$min.age ~ mus.strat$scaled.exp + mus.strat$scaled.len))
plot(mus.strat$min.age ~ mus.strat$scaled.len)
summary(lm(log10(mus.strat$min.age) ~ mus.strat$scaled.exp + mus.strat$scaled.len))
summary(lm(log10(mus.strat$min.age+1) ~ mus.strat$scaled.exp + mus.strat$scaled.len))
summary(lm(mus.strat$min.age ~ 0mus.strat$scaled.exp + mus.strat$scaled.len))
summary(lm(mus.strat$min.age ~ 0+mus.strat$scaled.exp + mus.strat$scaled.len))
summary(lm(log10(mus.strat$min.age+1) ~ mus.strat$scaled.exp + mus.strat$scaled.len))
summary(lm(mus.strat$min.age ~ mus.strat$scaled.exp + mus.strat$scaled.len))
cor.test(mus.strat$scaled.len, mus.strat$length)
cor.test(mus.strat$scaled.len, mus.strat$min.age)
cor.test(mus.strat$scaled.len, mus.strat$min.age, method="s")
cor.test(mus.strat$scaled.len, mus.strat$min.age, method="k")
cor.test(mus.strat$scaled.exp, mus.strat$min.age, method="k")
plot(mus.strat$min.age ~ mus.strat$scaled.exp)
plot(log10(mus.strat$min.age) ~ mus.strat$scaled.exp)
